// Generated by CoffeeScript 1.3.3
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  (function(factory) {
    if (typeof require === "function" && typeof exports === "object" && typeof module === "object") {
      return module.exports = factory();
    } else if (typeof define === "function" && define.amd) {
      return define(function() {
        return factory();
      });
    }
  })(function() {
    return Backbone.Model = (function(_super) {

      __extends(Model, _super);

      function Model() {
        return Model.__super__.constructor.apply(this, arguments);
      }

      Model.prototype.initialize = function() {
        var defaultValue, name, _ref, _results;
        Model.__super__.initialize.apply(this, arguments);
        _ref = this.defaults;
        _results = [];
        for (name in _ref) {
          defaultValue = _ref[name];
          _results.push(this._addProperty(name));
        }
        return _results;
      };

      Model.prototype._addProperty = function(name) {
        return Object.defineProperty(this, name, {
          configurable: true,
          enumerable: true,
          get: function() {
            return this.get(name);
          },
          set: function(value) {
            var change;
            change = {};
            change[name] = value;
            return this.set(change);
          }
        });
      };

      return Model;

    })(Backbone.Model);
  });

}).call(this);
